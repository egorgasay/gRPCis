syntax = "proto3";

option go_package = "./";

package api;

service Balancer {
  rpc Index(IndexRequest) returns (IndexResponse) {}
  rpc Set(BalancerSetRequest) returns (BalancerSetResponse) {}
  rpc SetToIndex(BalancerSetToIndexRequest) returns (BalancerSetResponse) {}
  rpc Get(BalancerGetRequest) returns (BalancerGetResponse) {}
  rpc GetFromIndex(BalancerGetFromIndexRequest) returns (BalancerGetResponse) {}
  rpc Connect(ConnectRequest) returns (ConnectResponse) {}
  rpc Disconnect(DisconnectRequest) returns (DisconnectResponse) {}
  rpc Servers(ServersRequest) returns (ServersResponse) {}
  rpc GetIndex(GetIndexRequest) returns (GetIndexResponse) {}
  rpc IsIndex(GetIndexRequest) returns (IsIndexResponse) {}
}

message BalancerSetRequest {
  string key = 1;
  string value = 2;
  int32 server = 3;
  bool uniques = 4;
}

message GetIndexRequest {
  string name = 1;
}

message SetToIndexRequest {
  string key = 1;
  string value = 2;
  bool unique = 3;
  string name = 4;
}

message GetToIndexRequest {
  string key = 1;
  string name = 2;
}

message BalancerSetToIndexRequest {
  string key = 1;
  string value = 2;
  int32 server = 3;
  bool uniques = 4;
  string index = 5;
}

message BalancerGetRequest {
  string key = 1;
  int32 server = 2;
}

message BalancerGetFromIndexRequest {
  string key = 1;
  int32 server = 2;
  string index = 3;
}

message ConnectRequest {
  string Address = 1;
  uint64 Total = 2;
  uint64 Available = 3;
  int32 server = 4;
}

message IndexRequest {
  string name = 1;
//  string defaultAttributes = 2;
}

message DisconnectRequest{
  int32 serverNumber = 1;
}

message ServersRequest{ }

message BalancerGetResponse {
  string value = 1;
}

message IsIndexResponse {
  bool ok = 1;
}

message GetIndexResponse {
  map<string, string> index = 1;
  uint64 Total = 2;
  uint64 Available = 3;
}

message BalancerSetResponse {
  int32 savedTo = 1;
}

message ConnectResponse {
  string status = 1;
  int32 serverNumber = 2;
}

message DisconnectResponse{ }

message IndexResponse{ }

message ServersResponse {
  string serversInfo = 1;
}