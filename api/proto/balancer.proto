syntax = "proto3";

option go_package = "./balancer";

package api;

service Balancer {
  rpc Index(BalancerIndexRequest) returns (BalancerIndexResponse) {}
  rpc Set(BalancerSetRequest) returns (BalancerSetResponse) {}
  rpc SetToIndex(BalancerSetToIndexRequest) returns (BalancerSetToIndexResponse) {}
  rpc AttachToIndex(BalancerAttachToIndexRequest) returns (BalancerAttachToIndexResponse) {}
  rpc Get(BalancerGetRequest) returns (BalancerGetResponse) {}
  rpc GetFromIndex(BalancerGetFromIndexRequest) returns (BalancerGetFromIndexResponse) {}
  rpc Connect(BalancerConnectRequest) returns (BalancerConnectResponse) {}
  rpc Disconnect(BalancerDisconnectRequest) returns (BalancerDisconnectResponse) {}
  rpc Servers(BalancerServersRequest) returns (BalancerServersResponse) {}
  rpc GetIndex(BalancerGetIndexRequest) returns (BalancerGetIndexResponse) {}
  rpc IsIndex(BalancerIsIndexRequest) returns (BalancerIsIndexResponse) {}
  rpc Size(BalancerIndexSizeRequest) returns (BalancerIndexSizeResponse) {}
  rpc Delete(BalancerDeleteRequest) returns (BalancerDeleteResponse) {}
  rpc DeleteIndex(BalancerDeleteIndexRequest) returns (BalancerDeleteIndexResponse) {}
}

message BalancerSetRequest {
  string key = 1;
  string value = 2;
  int32 server = 3;
  bool uniques = 4;
}

message BalancerIndexSizeRequest {
  string name = 1;
}

message BalancerGetIndexRequest {
  string name = 1;
}

message BalancerDeleteRequest {
  string key = 1;
  int32 server = 2;
}

message BalancerDeleteIndexRequest {
  string index = 1;
}

message BalancerGetToIndexRequest {
  string key = 1;
  string name = 2;
}

message BalancerSetToIndexRequest {
  string key = 1;
  string value = 2;
  bool uniques = 3;
  string index = 4;
}

message BalancerAttachToIndexRequest {
  string dst = 1;
  string src = 2;
}

message BalancerGetRequest {
  string key = 1;
  int32 server = 2;
}

message BalancerGetFromIndexRequest {
  string key = 1;
  int32 server = 2;
  string index = 3;
}

message BalancerConnectRequest {
  string Address = 1;
  uint64 Total = 2;
  uint64 Available = 3;
  int32 server = 4;
}

message BalancerIndexRequest {
  string name = 1;
//  string defaultAttributes = 2;
}


message BalancerIsIndexRequest {
  string name = 1;
}

message BalancerDisconnectRequest{
  int32 serverNumber = 1;
}

message BalancerServersRequest{ }

message BalancerGetResponse {
  string value = 1;
}

message BalancerIsIndexResponse {
  bool ok = 1;
}

message BalancerGetIndexResponse {
  map<string, string> index = 1;
}

message BalancerSetResponse {
  int32 savedTo = 1;
}

message BalancerConnectResponse {
  string status = 1;
  int32 serverNumber = 2;
}

message BalancerAttachToIndexResponse {}

message BalancerDeleteResponse {}

message BalancerDisconnectResponse{ }

message BalancerSetToIndexResponse {
  int32 savedTo = 1;
}

message BalancerIndexSizeResponse {
  uint64 size = 1;
}

message BalancerGetFromIndexResponse {
  string value = 1;
}

message BalancerIndexResponse{ }

message BalancerDeleteIndexResponse{ }

message BalancerServersResponse {
  string serversInfo = 1;
}